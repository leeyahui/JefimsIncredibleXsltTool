<Window x:Class="JefimsIncredibleXsltTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:avalonEditFolding="clr-namespace:ICSharpCode.AvalonEdit.Folding;assembly=ICSharpCode.AvalonEdit"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" Height="700" Width="1300"
        WindowStartupLocation="CenterScreen"
        Closing="Window_Closing"
        Foreground="{Binding ColorTheme.Foreground}"
        Background="{Binding ColorTheme.Background}">
    <Window.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <Style TargetType="avalonEditFolding:FoldingMargin">
                <Setter Property="FoldingMarkerBrush" Value="{Binding ColorTheme.FoldingLines}" />
                <Setter Property="FoldingMarkerBackgroundBrush" Value="{Binding ColorTheme.FoldingBackground}" />
                <Setter Property="SelectedFoldingMarkerBrush" Value="{Binding ColorTheme.SelectedFoldingLines}" />
                <Setter Property="SelectedFoldingMarkerBackgroundBrush" Value="{Binding ColorTheme.SelectedFoldingBackground}" />
                <Setter Property="Cursor" Value="Arrow" />
            </Style>

            <Style TargetType="avalonEdit:TextArea" BasedOn="{StaticResource {x:Type avalonEdit:TextArea}}">
                <Setter Property="Background" Value="{Binding ColorTheme.EditorBackground}" />
                <Setter Property="Foreground" Value="{Binding ColorTheme.EditorForeground}" />

            </Style>
            <Style TargetType="avalonEdit:TextView">
                <Setter Property="LinkTextForegroundBrush" Value="{Binding ColorTheme.Hyperlink}" />
            </Style>
            <Style TargetType="avalonEdit:TextEditor" BasedOn="{StaticResource {x:Type avalonEdit:TextEditor}}">
                <Setter Property="Background" Value="{Binding ColorTheme.EditorBackground}" />
                <Setter Property="Foreground" Value="{Binding ColorTheme.EditorForeground}" />
                <Setter Property="LineNumbersForeground" Value="#2B91AF"/>
                <Style.Triggers>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter Property="Background" Value="{Binding ColorTheme.EditorReadOnlyBackground}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="New" Executed="NewCommand_Executed" />
        <CommandBinding Command="Open" Executed="OpenCommand_Executed" />
        <CommandBinding Command="Save" Executed="SaveCommand_Executed" />
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition/>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>

        <Menu>
            <MenuItem Header="文件(_F)">
                <MenuItem Command="New" />
                <MenuItem Command="Open" />
                <MenuItem Command="Save" />
            </MenuItem>
            <MenuItem Header="主题(_C)" ItemsSource="{Binding ColorThemes}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <!--We bind preview because just MouseDown and MouseUp are too late - we don't get them as they are handled and swallowed by menu item-->
                        <EventSetter Event="PreviewMouseDown" Handler="ChangeColorTheme_MouseUp" />
                    </Style>
                </MenuItem.ItemContainerStyle>
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock MinWidth="30" FontSize="20" TextAlignment="Center" Text="{Binding IconSymbol}">
                                <TextBlock.BitmapEffect>
                                    <DropShadowBitmapEffect ShadowDepth="0" Color="{Binding IconHighlightColor}"  />
                                </TextBlock.BitmapEffect>
                            </TextBlock>
                            <TextBlock VerticalAlignment="Center" Text="{Binding Id}" />
                        </StackPanel>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
            </MenuItem>
            <MenuItem Header="格式">
                <MenuItem Header="PrettyPrint" Click="ButtonPrettyPrint_Click"/>
            </MenuItem>
        </Menu>
        <Grid Grid.Row="2" Margin="7">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Margin="0,0,0,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel>
                        <TextBlock x:Name="TextBlockXPath" TextWrapping="Wrap" Style="{StaticResource MaterialDesignBody1TextBlock}"/>
                        <WrapPanel>
                            <Button Click="ButtonCopyXPath_Click" Margin="0,2,5,0">Copy XPath</Button>
                            <Button Click="ButtonCopyXPathNoIndexes_Click" Margin="0,2,5,0">Copy XPath, no indexes</Button>
                            <TextBlock Margin="5,0,0,0" Text="XML内容" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
                        </WrapPanel>
                    </StackPanel>
                    <avalonEdit:TextEditor Grid.Row="1"
                        Margin="0,0,5,0"
                        Name="SourceXml"
                        FontFamily="Consolas"
                        SyntaxHighlighting="XML"
                        Document="{Binding XmlToTransformDocument}"
                        ShowLineNumbers="True"
                        FontSize="11pt"
                        MouseRightButtonDown="SourceXml_MouseRightButtonDown"
                        PreviewMouseLeftButtonUp="SourceXml_MouseLeftButtonUp">
                    </avalonEdit:TextEditor>
                </Grid>
                <GridSplitter Grid.Column="0" Width="5"/>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel HorizontalAlignment="Center">
                        <TextBlock Text="XSLT代码" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
                    </StackPanel>
                    <avalonEdit:TextEditor Grid.Row="1"
                        Name="SourceXslt"
                        FontFamily="Consolas"
                        SyntaxHighlighting="XML"
                        FontSize="11pt"
                        Document="{Binding Document.TextDocument}"
                        ShowLineNumbers="True">
                    </avalonEdit:TextEditor>
                </Grid>
            </Grid>
            <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="5"/>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition/>
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <StackPanel HorizontalAlignment="Center">
                    <TextBlock Text="输出结果:" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
                </StackPanel>
                <avalonEdit:TextEditor Grid.Row="1"
                    Name="OutputXml"
                    FontFamily="Consolas"
                    SyntaxHighlighting="XML"
                    ShowLineNumbers="True"
                    FontSize="11pt"
                    Document="{Binding ResultingXmlDocument}"
                    IsReadOnly="True"/>
                <avalonEdit:TextEditor
                    Name="Errors"
                    WordWrap="True"
                    FontFamily="Consolas"
                    SyntaxHighlighting="XML"
                    ShowLineNumbers="True"
                    FontSize="11pt"
                    Height="150"
                    Grid.Row="2"
                    Document="{Binding ErrorsDocument}"
                    Visibility="{Binding ErrorsExist, Converter={StaticResource BoolToVis}}"
                    IsReadOnly="True"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
